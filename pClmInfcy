#!/usr/bin/python
import numpy as np
import sys
import matplotlib.pyplot as plt
     
def getFromFile(f):
    data=np.loadtxt(f)
    d=[]
    n=0
    for l in data:
	if l[1]==0:
       	    n+=1	
	    d.append([])
	d[n-1].append(l)
    return d 
def pCycle(d,l,c,lw):
    line,=plt.plot(d[1],d[0],label =l, color=c,linestyle='-',linewidth=lw)
    return line
def save(a,f):
    d=np.transpose(a)
    f = open(f,'w')
    for row in d:
        for line in row:
            f.write(str(line))
            f.write('\t')
        f.write('\n')
    f.close()
        
def CIC(E):
    C=0.
    f=[]
    r=[]
    Q1=E[0][1]
    for e in E:
        C=C+e[1]-e[2]
        f.append(100*C/Q1)
        r.append(100*(Q1-e[2])/Q1)
    return f,r
def splitIe(data):
    p=[]
    n=[]
    for d in data:
        if d[3]>100:
            d[3]=(d[3]-100)/100
            n.append(d)
        elif d[3]<100:
            d[3]=(100-d[3])/100
            p.append(d)
    return p,n



#Colors
color_sequence = ['g','b','k','darkviolet','c']
linestyle=['-','--']
labels = ('1st', '2nd', '3rd', '4th', '5th')
# plot

f = sys.argv[1]
data=np.loadtxt(f).transpose()
p,n=splitIe(np.loadtxt(f))
ps=np.array(p).transpose()
ns=np.array(n).transpose()


fig=plt.figure(figsize=(6.5,5),dpi=600)
ax_c = fig.add_subplot(111)

cc=ax_c.plot(ps[0],ps[3],'b.',label ='CI>0')
dc=ax_c.plot(ns[0],ns[3],'r.',label ='CI<0')

#ax_c.set_xlim(-50,1.1*np.amax(data[0]))
ax_c.set_ylim(0.001,1)
ax_c.set_yscale('log')
ax_c.set_ylabel('Coulombic Inefficency')
ax_c.set_xlabel('Cycles')
ax_c.grid(True)
ax_c.legend(loc=2,framealpha=0.4)



ax_e = ax_c.twinx()
ax_e.plot(data[0],CIC(np.loadtxt(f))[0],'c-',label ='CIC',linewidth=2)
ax_e.plot(data[0],CIC(np.loadtxt(f))[1],'k-',label ='CFF',linewidth=2)
ax_e.plot(data[0],CIC(np.loadtxt(f))[0]-CIC(np.loadtxt(f))[1],'m--',label ='RCIC',linewidth=2)
ax_e.legend(loc=1,framealpha=0.4)
ax_e.set_ylim(0,200)
ax_e.set_ylabel('Capacity remaining (%)')

ax_c.set_xlim(-50,1.1*np.amax(data[0]))
plt.xlabel('Cycles')


plt.savefig(f+'_IM.pdf')
