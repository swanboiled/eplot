#!/usr/bin/python
import numpy as np 
import sys 
import matplotlib.pyplot as plt 
import matplotlib as mpl
import matplotlib.ticker as mtick 


def pCycle(d,l,c,lw):
    line,=plt.plot(d[1],d[0],label =l, color=c,linestyle='-')
    return line
def save(a,f):
    d=np.transpose(a)
    f = open(f,'w')
    for row in d:
        for line in row:
            f.write(str(line))
            f.write('\t')
        f.write('\n')
    f.close()
        

#Colors
color_sequence = ['g','b','k','darkviolet','c','darkred']
linestyle=['-','--']
labels = ('2C', '6C', '100th', '400th','800th')



# plot
plt.style.use('z')
mpl.rcParams['figure.subplot.left'] =0.15
mpl.rcParams['figure.subplot.right'] =0.95 
f = sys.argv[1]
pA=np.loadtxt(f)


pd=np.array(pA).transpose()

figr, (ax1, ax2) = plt.subplots(1, 2, sharey=True)
ax1.set_xlim(0,30)  # outliers only

ax1.plot(pd[0],pd[1],label ='voltage profile', color='k')



ax2.set_xlim(1450,1470)  # 
ax2.plot(pd[0],pd[1], color='k')

# zoom-in / limit the view to different portions of the data
ax1.spines['right'].set_visible(False)
ax2.spines['left'].set_visible(False)
ax1.yaxis.tick_left()
ax2.tick_params(labelright='off')  # don't put tick labels at the top
ax2.tick_params(labelleft='off')
ax2.tick_params(left='off')



d = .015  # how big to make the diagonal lines in axes coordinates
# arguments to pass plot, just so we don't keep repeating them
kwargs = dict(transform=ax1.transAxes, color='k', clip_on=False)
ax1.plot((1-d, 1+d), (1-d, 1+d), **kwargs)        # top-left diagonal
ax1.plot((1 - d, 1 + d), (-d, +d), **kwargs)  # top-right diagonal

kwargs.update(transform=ax2.transAxes)  # switch to the bottom axes
ax2.plot((-d, +d), (1 - d, 1 + d), **kwargs)  # bottom-left diagonal
ax2.plot(( - d,  d), ( - d,  d), **kwargs)  # bottom-right diagonal




#plt.xlim(20,np.amax(pd[0]))
#plt.ylim(1.3,4.2)
ax1.set_ylabel('Voltage (V)')
ax1.set_xlabel('Time (s)')
ax1.legend(loc=2,framealpha=0.4)



plt.savefig(f+'.pdf')
